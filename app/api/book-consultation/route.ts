import { NextRequest, NextResponse } from 'next/server'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { 
      fullName, 
      phone, 
      email, 
      projectType, 
      projectDescription, 
      preferredContact,
      preferredDate,
      preferredTime 
    } = body

    // Validate required fields
    if (!fullName || !phone || !email || !projectType) {
      return NextResponse.json(
        { error: 'Missing required fields' },
        { status: 400 }
      )
    }

    // Create Google Calendar event
    const calendarEventUrl = createGoogleCalendarEvent({
      fullName,
      phone,
      email,
      projectType,
      projectDescription,
      preferredContact,
      preferredDate,
      preferredTime
    })

    // Send notification email to Wade & Co
    await sendNotificationEmail({
      fullName,
      phone,
      email,
      projectType,
      projectDescription,
      preferredContact,
      preferredDate,
      preferredTime
    })

    // Send confirmation email to customer
    await sendCustomerConfirmation({
      customerEmail: email,
      customerName: fullName,
      projectType,
      calendarEventUrl
    })

    return NextResponse.json({
      success: true,
      message: 'Consultation scheduled successfully!',
      calendarEventUrl
    })

  } catch (error) {
    console.error('Booking error:', error)
    return NextResponse.json(
      { error: 'Failed to schedule consultation' },
      { status: 500 }
    )
  }
}

function createGoogleCalendarEvent({
  fullName,
  phone,
  email,
  projectType,
  projectDescription,
  preferredContact,
  preferredDate,
  preferredTime
}: any) {
  // Calculate consultation date (default to next business day if no preference)
  const consultationDate = preferredDate ? new Date(preferredDate) : getNextBusinessDay()
  const startTime = preferredTime || '10:00'
  
  // Create datetime strings for Google Calendar
  const [hours, minutes] = startTime.split(':')
  consultationDate.setHours(parseInt(hours), parseInt(minutes), 0, 0)
  
  const endTime = new Date(consultationDate)
  endTime.setHours(consultationDate.getHours() + 1) // 1-hour consultation
  
  const formatDate = (date: Date) => {
    return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z'
  }

  const title = encodeURIComponent(`Concrete Consultation - ${fullName} - ${projectType}`)
  const details = encodeURIComponent(
    `CONCRETE CONSULTATION DETAILS:\\n\\n` +
    `Customer: ${fullName}\\n` +
    `Phone: ${phone}\\n` +
    `Email: ${email}\\n` +
    `Project Type: ${projectType}\\n` +
    `Preferred Contact: ${preferredContact}\\n\\n` +
    `Project Description:\\n${projectDescription || 'No description provided'}\\n\\n` +
    `NEXT STEPS:\\n` +
    `1. Call customer to confirm appointment\\n` +
    `2. Prepare project estimate materials\\n` +
    `3. Schedule site visit if needed\\n\\n` +
    `Generated by Wade & Co Construction website`
  )
  const location = encodeURIComponent('Phone/Video Call or Customer Site')

  const calendarUrl = `https://calendar.google.com/calendar/render?action=TEMPLATE&text=${title}&dates=${formatDate(consultationDate)}/${formatDate(endTime)}&details=${details}&location=${location}&sf=true&output=xml`
  
  return calendarUrl
}

function getNextBusinessDay(): Date {
  const tomorrow = new Date()
  tomorrow.setDate(tomorrow.getDate() + 1)
  
  // If tomorrow is weekend, move to Monday
  if (tomorrow.getDay() === 6) { // Saturday
    tomorrow.setDate(tomorrow.getDate() + 2)
  } else if (tomorrow.getDay() === 0) { // Sunday
    tomorrow.setDate(tomorrow.getDate() + 1)
  }
  
  return tomorrow
}

async function sendNotificationEmail(data: any) {
  // For now, we'll use a simple approach
  // In production, you'd integrate with SendGrid, Mailgun, or similar
  console.log('New consultation request:', data)
  
  // You can add email service integration here
  // Example with fetch to email service:
  /*
  const emailResponse = await fetch('YOUR_EMAIL_SERVICE_ENDPOINT', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      to: 'wadeconcreteco@gmail.com',
      subject: `New Consultation Request - ${data.fullName}`,
      html: generateNotificationEmail(data)
    })
  })
  */
}

async function sendCustomerConfirmation(data: any) {
  // Customer confirmation email
  console.log('Sending confirmation to:', data.customerEmail)
  
  // You can add email service integration here
}

function generateNotificationEmail(data: any): string {
  return `
    <h2>New Consultation Request</h2>
    <p><strong>Customer:</strong> ${data.fullName}</p>
    <p><strong>Phone:</strong> ${data.phone}</p>
    <p><strong>Email:</strong> ${data.email}</p>
    <p><strong>Project Type:</strong> ${data.projectType}</p>
    <p><strong>Preferred Contact:</strong> ${data.preferredContact}</p>
    <p><strong>Description:</strong></p>
    <p>${data.projectDescription || 'No description provided'}</p>
    <hr>
    <p>Please follow up within 24 hours to schedule the consultation call.</p>
  `
}